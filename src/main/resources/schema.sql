DROP TABLE IF EXISTS comments;
DROP TABLE IF EXISTS bookings;
DROP TABLE IF EXISTS items;
DROP TABLE IF EXISTS requests;
DROP TABLE IF EXISTS users;

CREATE TABLE IF NOT EXISTS users (
id INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
name VARCHAR(300) NOT NULL,
email VARCHAR(300) UNIQUE NOT NULL
);

CREATE TABLE IF NOT EXISTS requests (
id INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
description VARCHAR(500),
requestor_id INTEGER REFERENCES users(id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS items (
id INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
name VARCHAR(300) NOT NULL,
description VARCHAR(500) NOT NULL,
is_available BOOLEAN NOT NULL,
owner_id INTEGER NOT NULL REFERENCES users(id) ON DELETE CASCADE,
request_id INTEGER REFERENCES requests(id) ON DELETE SET NULL
);

CREATE TABLE IF NOT EXISTS bookings (
id INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
start_date TIMESTAMP,
end_date TIMESTAMP,
item_id INTEGER REFERENCES items(id) ON DELETE CASCADE,
booker_id INTEGER REFERENCES users(id) ON DELETE CASCADE,
status VARCHAR(300)
);

CREATE TABLE IF NOT EXISTS comments (
id INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
text VARCHAR(500),
item_id INTEGER REFERENCES items(id) ON DELETE CASCADE,
author_id INTEGER REFERENCES users(id) ON DELETE CASCADE,
created TIMESTAMP
);